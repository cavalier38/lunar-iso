#!/bin/bash
############################################################
#                                                          #
# This code is written for Lunar Linux, see                #
# http://lunar-linux.org                                   #
#                                                          #
############################################################
#                                                          #
# This file contains the passwordfield widget              #
#                                                          #
############################################################
#                                                          #
# Copyrighted Peter de Ridder 2013                         #
# This file in released under the GPLv2                    #
#                                                          #
############################################################

# passwordfield_create [<init string>]
# stdout will contain the array init which can be used in declare or local
passwordfield_create() {
  local -A THIS=([value]="")

  widget_create_return THIS
}

# passwordfield_value <widget runtime>
# stdout will contain the value to display in the dialog
passwordfield_value() {
  local VALUE=$1[value]
  if [ -n "${!VALUE}" ] ; then
    echo set
  else
    echo unset
  fi
}

# passwordfield_selected <widget runtime>
# do the action when this widget was selected in the menu
# display an inputbox to change the value
passwordfield_selected() {
  local NAME=$1[name]
  local VALUE=$1[value]
  local -a SET

  while IFS=$'\t\n' SET=($(dialog_run --passwordbox "${!NAME} - 1/2" 0 0 --and-widget --passwordbox "${!NAME} - 2/2" 0 0)) ; do
    if [ "${SET[0]}" = "${SET[1]}" ] ; then
      eval ${VALUE}='"${SET[0]}"'
      break
    else
      if ! dialog_run --yesno "Failed to set password. Retry?" 0 0 ; then
	break
      fi
    fi
  done
}

# passwordfield_set <widget runtime> <value>
passwordfield_set() {
  local VALUE=$1[value]
  eval ${VALUE}='"$2"'
}

# passwordfield_get <widget runtime>
# stdout will contain the value
passwordfield_get() {
  local VALUE=$1[value]
  echo ${!VALUE}
}
